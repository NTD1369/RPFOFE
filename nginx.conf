# nginx.conf
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  #tcp_nopush     on;
  
  keepalive_timeout  65;
  #gzip  on;
  #include /etc/nginx/conf.d/*.conf;
 
server {
  listen 80;
  set $cors_credentials '';
  set $cors_content_type '';
  set $cors_content_length '';

  if ($http_origin ~ '.+') {
      set $cors_credentials 'true';
  }

  if ($request_method = OPTIONS) {
      set $cors_content_type 'text/plain';
      set $cors_content_length '0';
  }

  # empty header will not be added
  add_header Access-Control-Allow-Origin $http_origin always;
  add_header Access-Control-Allow-Credentials $cors_credentials always;
  add_header Access-Control-Allow-Methods $http_access_control_request_method always;
  add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
  add_header Content-Type $cors_content_type;
  add_header Content-Length $cors_content_length;

  if ($request_method = OPTIONS) {
      return 204;
  }


  location / {
    root   /usr/share/nginx/html;
    index  index.html index.html;
    try_files $uri $uri/ /index.html;
  }
   
  }
}
#  listen 443 ssl;